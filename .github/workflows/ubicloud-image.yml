name: Build Ubicloud Image
run-name: ${{ inputs.image_version }} - ${{ inputs.image_types }}
# GitHub Action port from Azure Pipelines version
# https://github.com/actions/runner-images/blob/main/images.CI/linux-and-win/azure-pipelines/image-generation.yml

on:
  workflow_dispatch:
    inputs:
      image_types:
        description: "Comma-separated list of image types to build"
        required: true
        default: github-ubuntu-2204-x64,github-ubuntu-2204-arm64,github-gpu-ubuntu-2204-x64,github-ubuntu-2404-x64,github-ubuntu-2404-arm64
        type: string
      image_version:
        description: "Image version in semver format. You can get current version from the README.md file"
        required: true
        type: string

concurrency: "${{ inputs.image_types }}-${{ inputs.image_version }}"

permissions:
  id-token: write
  contents: read

env:
  AZURE_LOCATION: "Germany West Central"
  RUN_VALIDATION_FLAG: "true"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.set-matrix.outputs.images }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set matrix
        id: set-matrix
        run: |
          selected_images="$(echo '${{ inputs.image_types }}' | jq -R -c 'split(",")')"
          echo "images<<EOF"$'\n'"$selected_images"$'\n'EOF >> "$GITHUB_OUTPUT"
  upload:
    needs: [generate-matrix]
    name: upload ${{ matrix.image_type }}
    runs-on: ubicloud-standard-16
    strategy:
      fail-fast: false
      matrix:
        image_type: ${{ fromJson(needs.generate-matrix.outputs.images) }}
    env:
      MANAGED_IMAGE_NAME: "${{ matrix.image_type  }}-${{inputs.image_version }}"
      MC_HOST_ubicloud: ${{ secrets.MINIO_CONNECTION_STRING }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install MinIO client
        run: |
          curl https://dl.min.io/client/mc/release/linux-amd64/mc -o mc
          sudo mv mc /usr/bin/mc
          sudo chmod +x /usr/bin/mc
          mc --version

      - name: Set MinIO root certificates
        run: |
          mkdir -p ~/.mc/certs/CAs
          cat <<EOT > ~/.mc/certs/CAs/ubicloud_images_blob_storage_certs.crt
          ${{ secrets.MINIO_ROOT_CERTIFICATES }}
          EOT
      
      - name: Install rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      - name: Configure rclone for R2
        run: |
          rclone config create r2 s3 \
            provider Cloudflare \
            access_key_id ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }} \
            secret_access_key ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }} \
            endpoint ${{ secrets.CLOUDFLARE_R2_ENDPOINT }} \
            no_check_bucket true

      - name: Download the RAW image from MinIO
        run: |
          mc cp ubicloud/ubicloud-images/${{ env.MANAGED_IMAGE_NAME }}.raw ${{ env.MANAGED_IMAGE_NAME }}.raw
          mc cp ubicloud/ubicloud-images/${{ env.MANAGED_IMAGE_NAME }}.raw.sha256 ${{ env.MANAGED_IMAGE_NAME }}.raw.sha256
      - name: Upload image to R2 with rclone
        run: |
          rclone copy ${{ env.MANAGED_IMAGE_NAME }}.raw r2:ubicloud-images/
          rclone copy ${{ env.MANAGED_IMAGE_NAME }}.raw.sha256 r2:ubicloud-images/
